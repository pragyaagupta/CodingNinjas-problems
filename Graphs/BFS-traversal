#include <iostream>
#include <queue>
using namespace std;
void print_BFS(int** edges,int V,int sv){
    queue <int> pendingvertices;
    bool* visited=new bool[V];
    for(int i=0;i<V;i++){
        visited[i]=false;
    }
    
    pendingvertices.push(sv);
    visited[sv]=true;
    
    while(pendingvertices.empty()){
        int curr=pendingvertices.front();
        pendingvertices.pop();
        cout<<curr<<endl;
        for(int i=0;i<V;i++){
            if(i==curr){
                continue;
            }
            if(edges[curr][i]==1 && visited[i]==false){
                pendingvertices.push(i);
                visited[i]==true;
            }
        }
        delete [] visited;
    }
}
    
  

int main() {
    int V, E;
    cin >> V >> E;

	int **edges= new int*[V];
	for(int i=0;i<V;i++){
	    edges[i]=new int[V];
	    for(int j=0;j<V;j++){
	        edges[i][j]=0;
	    }
	}
	
	for(int i=0;i<E;i++){
	    int f,s;
	    cin>>f>>s;
	    edges[f][s]=1;
	    edges[s][f]=1;
	}
	
    
    print_BFS(edges,V,0);
	return 0;
}
